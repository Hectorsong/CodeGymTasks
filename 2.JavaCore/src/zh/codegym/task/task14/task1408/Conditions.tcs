taskKey="zh.codegym.task.task14.task1408"\n\n鸡肉工厂

编写工厂 (HenFactory) 以创建鸡 (Hen)：
1.编写 Hen 类。
1.1.将其设为 abstract。
1.2.将 int getMonthlyEggCount() 方法添加到抽象类。
1.3.将 String getDescription() 方法添加到类。它应返回“我是一只鸡。”.
2.创建继承 Hen 的 NorthAmericanHen 类。
3.创建继承 Hen 的 EuropeanHen 类。
4.创建继承 Hen 的 AsianHen 类。
5.创建继承 Hen 的 AfricanHen 类。
6.在这四个类中，编写 getMonthlyEggCount 方法的实现。
该方法应该返回这种鸡每个月下蛋的数量。
7.在这四个类中，编写 getDescription 方法的实现。
该方法必须返回一个字符串，如下所示：
<父类>.getDescription() + "我来自<洲>。我每个月下 <n> 个蛋。"
其中<洲>是洲的名字
而 <n> 是每个月鸡蛋的数量
8.在 HenFactory 类中，实现 getHen 方法。它应返回生产这种鸡的洲的鸡品种。
9.你所创建的全部类应位于单独的文件中。


Requirements:
1.	Hen 类必须为 abstract。
2.	Hen 类必须包含 abstract int getMonthlyEggCount() 方法。
3.	Hen 类必须实现 String getDescription() 方法，该方法返回&ldquo;我是一只鸡&rdquo;。
4.	NorthAmericanHen、EuropeanHen、AsianHen 和 AfricanHen 类必须继承 Hen 类，并且要位于单独的文件中。
5.	NorthAmericanHen、EuropeanHen、AsianHen 和 AfricanHen 类必须实现 getMonthlyEggCount 方法，该方法应返回相应类型的鸡每月的下蛋数。
6.	NorthAmericanHen、EuropeanHen、AsianHen 和 AfricanHen 必须重写父类的 getDescription 方法，以便返回的字符串如下所示：&lt;父类&gt;.getDescription() + &quot;我来自&lt;洲&gt;。我每个月下 &lt;n&gt; 个鸡蛋。&quot;其中&lt;洲&gt;是大陆的名称，而 &lt;n&gt; 是每月的鸡蛋数。
7.	getHen 方法必须在 HenFactory 类中实现，并且必须返回与传递的洲相对应的鸡类型。


